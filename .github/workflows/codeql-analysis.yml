# CodeQL security analysis workflow for Jdempotent project
# This workflow performs static analysis to identify security vulnerabilities,
# bugs, and code quality issues in the Java codebase.
#
name: "CodeQL Security Analysis"

on:
  push:
    branches: [ master, main, develop ]
    paths:
      - '**/*.java'
      - '**/pom.xml'
      - '.github/workflows/codeql-analysis.yml'
  pull_request:
    branches: [ master, main, develop ]
    paths:
      - '**/*.java'
      - '**/pom.xml'
      - '.github/workflows/codeql-analysis.yml'
  schedule:
    # Run weekly on Saturdays at 2:38 AM UTC
    - cron: '38 2 * * 6'
  workflow_dispatch:
    # Allow manual triggering

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      # Required for all workflows
      actions: read
      contents: read
      # Required for workflows in private repositories
      security-events: write
      # Required to fetch internal or private CodeQL packs
      packages: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
        # CodeQL supports analysis for:
        # 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
        # Use 'java-kotlin' to analyze code written in Java, Scala, or Kotlin
        # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript, or Flow
        # Learn more about language support: https://aka.ms/codeql-language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch full history for better analysis
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # Initialize CodeQL tools for scanning
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # Enable additional security queries
        queries: +security-and-quality
        # Custom configuration for Java projects
        config: |
          name: "Jdempotent CodeQL Config"
          queries:
            - uses: security-and-quality
            - uses: security-extended
          paths-ignore:
            - "**/target/**"
            - "**/generated-sources/**"
            - "**/generated-test-sources/**"
          paths:
            - "Jdempotent-core/src/**"
            - "Jdempotent-spring-boot-*/src/**"

    # Build the project manually for better control
    - name: Build with Maven
      run: |
        echo "Building Jdempotent project..."
        mvn clean compile -B -V -DskipTests
      env:
        MAVEN_OPTS: "-Xmx2048m"

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{ matrix.language }}"
        # Upload results even if there are compilation errors
        upload: always

    # Optional: Upload SARIF results as artifacts for debugging
    - name: Upload CodeQL results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: codeql-results-${{ matrix.language }}
        path: /home/runner/work/_temp/codeql_databases/
        retention-days: 1
