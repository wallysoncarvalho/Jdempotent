name: Run Tests

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [17]
    
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Check for changes
        id: changes
        run: |
          # Determine base and head commits
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            BASE_SHA="${{ github.event.before }}"
            HEAD_SHA="${{ github.sha }}"
          fi
          
          echo "Comparing changes between $BASE_SHA and $HEAD_SHA"
          
          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only $BASE_SHA..$HEAD_SHA)
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Check for changes in each directory
          CORE_CHANGES=$(echo "$CHANGED_FILES" | grep -E '^Jdempotent-core/' | wc -l)
          POSTGRES_CHANGES=$(echo "$CHANGED_FILES" | grep -E '^Jdempotent-spring-boot-postgres-starter/' | wc -l)
          REDIS_CHANGES=$(echo "$CHANGED_FILES" | grep -E '^Jdempotent-spring-boot-redis-starter/' | wc -l)
          
          # Set outputs
          echo "core=$([ $CORE_CHANGES -gt 0 ] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
          echo "postgres=$([ $POSTGRES_CHANGES -gt 0 ] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
          echo "redis=$([ $REDIS_CHANGES -gt 0 ] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
          
          # Debug output
          echo "Core changes: $([ $CORE_CHANGES -gt 0 ] && echo 'true' || echo 'false') ($CORE_CHANGES files)"
          echo "Postgres changes: $([ $POSTGRES_CHANGES -gt 0 ] && echo 'true' || echo 'false') ($POSTGRES_CHANGES files)"
          echo "Redis changes: $([ $REDIS_CHANGES -gt 0 ] && echo 'true' || echo 'false') ($REDIS_CHANGES files)"

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and install Jdempotent-core to local repository
        if: ${{ steps.changes.outputs.core == 'true' || steps.changes.outputs.postgres == 'true' || steps.changes.outputs.redis == 'true' }}
        run: mvn clean install -pl Jdempotent-core -DskipTests

      - name: Run tests for "Jdempotent-core"
        if: ${{ steps.changes.outputs.core == 'true' }}
        run: mvn test -pl Jdempotent-core

      - name: Run tests for "Jdempotent-spring-boot-redis-starter"
        if: ${{ steps.changes.outputs.redis == 'true' || steps.changes.outputs.core == 'true' }}
        run: mvn test -pl Jdempotent-spring-boot-redis-starter

      - name: Run tests for "Jdempotent-spring-boot-postgres-starter"
        if: ${{ steps.changes.outputs.postgres == 'true' || steps.changes.outputs.core == 'true' }}
        run: mvn test -pl Jdempotent-spring-boot-postgres-starter
